!!! 5
html(lang="en")
    head
        meta(charset="utf-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0, shrink-to-fit=no")
        meta(http-equiv="X-UA-Compatible", content="IE=edge")
        link(rel="stylesheet" href=url_for('static', filename='css/bootstrap.min.css'))
        link(rel="stylesheet" href=url_for('static', filename='css/bs-stepper.min.css'))
        link(rel="stylesheet" href=url_for('static', filename='css/auth.css'))
        title Sign In
    body
        main
            div(aria-live='polite', aria-atomic='true', style='position: relative; min-height: 200px;')
                div(style='position: absolute; top: 0; right: 0;')
                    .toast(role='alert', aria-live='assertive', aria-atomic='true')
                        .toast-header
                            img.rounded.mr-2(src='...', alt='...')
                            strong.mr-auto Я знаю, выглядит херово, все потом
                            small.text-muted just now
                            button.ml-2.mb-1.close(type='button', data-dismiss='toast', aria-label='Close')
                                span(aria-hidden='true') ×
                        .toast-body
            .container
                .block.stepper-block
                    h1 Reset password
                    #stepper.bs-stepper.linear
                        .bs-stepper-header(role='tablist')
                            .step.active(data-target='#email')
                                button#stepperEmail.step-trigger(type='button', role='tab', aria-controls='email')
                                    span.bs-stepper-circle
                                        img.icon(width="18", src=url_for('static', filename='img/icons/svg/email.svg'))
                                    span.bs-stepper-label Enter email
                            .line
                            .step(data-target='#confirm')
                                button#stepperConfirm.step-trigger(type='button', role='tab', aria-controls='confirm', disabled='disabled')
                                    span.bs-stepper-circle
                                        img.icon(width="18", src=url_for('static', filename='img/icons/svg/code.svg'))
                                    span.bs-stepper-label Confirm
                            .line
                            .step(data-target='#pass')
                                button#stepperPass.step-trigger(type='button', role='tab', aria-controls='pass', disabled='disabled')
                                    span.bs-stepper-circle
                                        img.icon(width="18", src=url_for('static', filename='img/icons/svg/lock.svg'))
                                    span.bs-stepper-label Enter pass
                        .bs-stepper-content
                            #email.bs-stepper-pane.active.dstepper-block(role='tabpanel', aria-labelledby='stepperEmail')
                                p Enter your email for reset password
                                form#emailForm.needs-validation(onsubmit='return false', novalidate)
                                    .inputs-group.email-group
                                        img.icon(src=url_for('static', filename='img/icons/svg/email.svg'))
                                        label(for='rpass_emailSender_email') Email
                                        input.form-control(type='email', id="rpass_emailSender_email", name="rpass_emailSender_email", required)
                                        .invalid-feedback
                                    .button-group
                                        button.btn.cancel(onclick="location.href='#{url_for('.signin')}'") Cancel
                                        button#emailBtn.btn(onclick="resetSubmit('#emailForm')", type='submit') Send
                            #confirm.bs-stepper-pane(role='tabpanel', aria-labelledby='stepperConfirm')
                                p We sent message with code to 
                                form#codeForm.needs-validation(onsubmit='return false', novalidate)
                                    .inputs-group.code-group
                                        img(class="icon", width="18", src=url_for('static', filename='img/icons/svg/code.svg'))
                                        label(for='rpass_codeSender_code') Code
                                        input.form-control(type='text', id="rpass_codeSender_code", name="rpass_codeSender_code", required)
                                        .invalid-feedback
                                    .button-group
                                        button.btn.cancel(onclick="location.href='#{url_for('.signin')}'") Cancel
                                        button.btn(onclick="resetSubmit('#codeForm')", type='submit') Confirm
                            #pass.bs-stepper-pane(role='tabpanel', aria-labelledby='stepperPass')
                                p Enter new password for 
                                form#passForm.needs-validation(onsubmit='return false', novalidate)
                                    .inputs-group.password-group
                                        img.icon.icon-pass(src=url_for('static', filename='img/icons/svg/lock.svg'))
                                        label(for='rpass_passSender_password') New password
                                        #input_container2
                                            img.icon.eye(id="input_icon2", src=url_for('static', filename='img/icons/svg/eye.svg'))
                                            input.form-control(type='password', id="rpass_passSender_password", name="rpass_passSender_password", required)
                                        .invalid-feedback.pass
                                    .inputs-group.password-group
                                        img(class="icon icon-pass", src=url_for('static', filename='img/icons/svg/lock.svg'))
                                        label(for='rpass_passSender_rePassword') New password
                                        #input_container3
                                            img.icon.eye(id="input_icon3", src=url_for('static', filename='img/icons/svg/eye.svg'))
                                            input.form-control(type='password', id="rpass_passSender_rePassword", name="rpass_passSender_rePassword", required)
                                        .invalid-feedback.repass
                                    .button-group
                                        button.btn.cancel(onclick="location.href='#{url_for('.signin')}'") Cancel
                                        button.btn(onclick="resetSubmit('#passForm')", type='submit') Reset
        script(src="https://code.jquery.com/jquery-3.6.0.min.js", integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=", crossorigin="anonymous")
        script(src=url_for('static', filename='js/bootstrap.bundle.min.js'))
        script(src=url_for('static', filename='js/bs-stepper.min.js'))
        script(src=url_for('static', filename='js/tools/sendFormData.js'))
        script(src=url_for('static', filename='js/tools/eyeHideShow.js'))
        script.
            // Не обращайте внимание на эту хрень, она работает
            let stepper;
            let resetSubmit;
            document.addEventListener('DOMContentLoaded', () => {
                stepper = new Stepper(document.querySelector('#stepper'));
                resetSubmit = (fid) => {
                    let input = document.querySelector(fid+' input');
                    if (input.value === '') {
                        $('.invalid-feedback').hide()
                        $('.invalid-feedback').text("Field is required").show();
                    } else if (fid == "#emailForm" && !/.+@.+\..+/.test(input.value)) {
                        $('.invalid-feedback').hide()
                        $('.invalid-feedback').text("E-mail must be valid").show();
                    } else if (fid == "#codeForm" && (!/\w{8}/.test(input.value) || (input.value).length > 8)) {
                        $('.invalid-feedback').hide()
                        $('.invalid-feedback').text("Code must have 8 characters").show();
                    } else if (fid == "#passForm") {
                        let repass = document.getElementById('rpass_passSender_rePassword');
                        if ((input.value).length < 8 || (input.value).length > 32) {
                            $('.invalid-feedback').hide()
                            $('.invalid-feedback.pass').text("Min 8, max 32 characters and numbers").show();
                        } else if (repass.value === '') {
                            $('.invalid-feedback').hide()
                            $('.invalid-feedback.repass').text("Repeat password is required").show();
                        } else if (input.value !== repass.value) {
                            $('.invalid-feedback').hide()
                            $('.invalid-feedback.pass').text("Passwords do not match").show();
                            $('.invalid-feedback.repass').text("Passwords do not match").show();
                        } else {
                            $('.invalid-feedback').hide()
                            sendFormData(fid)
                        }
                    } else {
                        $('.invalid-feedback').hide()
                        sendFormData(fid)
                    };
                }
            });